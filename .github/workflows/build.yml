name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1) Checkout including submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # 2) Install vcpkg
      - name: Install vcpkg
        uses: lukka/get-vcpkg@v14

      # 3) Install dependencies via vcpkg
      - name: Install dependencies via vcpkg
        run: |
          .\vcpkg\vcpkg.exe install `
            vulkan-loader:x64-windows `
            glfw3:x64-windows `
            glm:x64-windows `
            stb:x64-windows `
            assimp:x64-windows `
            bullet3:x64-windows `
            spirv-reflect:x64-windows `
            meshoptimizer:x64-windows
        env:
          VCPKG_ROOT: ${{ github.workspace }}\vcpkg

      # 4) Set up CMake
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2

      # 5) Configure CMake
      - name: Configure CMake (Release)
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake

      # 6) Build
      - name: Build with CMake
        run: cmake --build build --config Release --parallel 8

      # 7) Upload executable
      - name: Upload QuarantineEngine.exe
        uses: actions/upload-artifact@v4
        with:
          name: QuarantineEngine
          path: build/Release/QuarantineEngine.exe

      # 8) Upload runtime DLLs (if any)
      - name: Upload runtime DLLs
        uses: actions/upload-artifact@v4
        with:
          name: EngineRuntimeDLLs
          path: build/Release/*.dll
